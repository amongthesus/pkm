{"version":3,"sources":["components/FormElements/Form.module.scss","pages/CardCreator/CardCreator.module.scss","utils/fetchApi.ts","services/http/cardOptionsRequest.ts","redux/ducks/cardOptions/saga.ts","redux/ducks/cardOptions/actionTypes.ts","utils/http.ts","redux/rootSaga.ts","utils/localStorage.ts","redux/ducks/cardOptions/actions.ts","redux/ducks/cardOptions/reducer.ts","redux/store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","utils/relativePathPrefix.ts","components/CardDisplay/Pokemon.tsx","components/CardDisplay/RaidBoss.tsx","utils/card.ts","components/CardDisplay/index.tsx","components/FormElements/InputLabel/index.tsx","components/FormElements/Checkbox/index.tsx","components/FormElements/EnergyPicker/index.tsx","components/FormElements/ImageInput/index.tsx","components/FormElements/Input/index.tsx","components/FormElements/Select/index.tsx","cropImage.ts","components/FormElements/Button/index.tsx","redux/ducks/cardOptions/selectors.ts","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/CardDisplay/CardDisplay.module.scss","App.module.scss","components/FormElements/EnergyPicker/EnergyPicker.module.scss"],"names":["module","exports","mapResponse","response","data","defaultHeaders","endpoint","options","a","process","axios","then","catch","error","code","status","message","fetchCardOptions","fetchApi","method","headers","getCardOptions","cardOptionsSaga","call","put","type","payload","obj","camelcaseKeys","deep","takeLatest","rootSaga","all","createAction","getCardOptionsSuccess","getCardOptionsFailed","initialState","isLoading","undefined","cardOptions","supertypes","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","cardOptionsReducer","createReducer","handleAction","actions","state","action","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","trace","actionCreators","sagaMiddleware","createSagaMiddleware","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","applyMiddleware","subscribe","stringify","setItem","saveState","getState","run","TrainerCard","name","description","subname","rarity","className","styles","formatText","classnames","descriptionWrapper","descriptionWrapperTrainerOutline","hasVStyle","hasSubname","EnergyCard","typeImage","hasSpecialStyle","descriptionWrapperEnergy","src","alt","typeImageSpecial","shortName","relativePathPrefix","path","value","console","log","PokemonCard","card","getMoveTotalCost","move","energyCost","reduce","acc","currentValue","amount","useEffect","move1","move2","highestCost","Math","max","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","forEach","moveName","style","left","formatMove","firstMove","moveMultiple","moveV","subtype","moveNameWrapper","moveCost","totalAmount","moveImages","map","moveType","returnValue","i","push","moveEnergy","key","formatMoveCost","moveDamage","damage","moveText","moveTextV","text","namePokemon","nameOutline","hasNameOutline","hasVSymbol","nameIcon","hasVMaxSymbol","hasStarSymbol","nameIconStar","hitpointsWrapper","hitpointsWrapperV","hitpointsWrapperBlackOutline","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","typeBar","whiteText","hasBlackTopText","hasWhiteTopText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","noDescription","descriptionWrapperPokemon","descriptionWrapperPokemonOutline","prevolveImage","prevolveImageWrapper","RaidBossCard","damageHasSymbol","test","raidBossMove","raidBossMoveName","raidBossMoveText","raidBossMoveDamage","raidBossMoveDamageShoved","nameRaidBoss","hitpointsWrapperRaidBoss","raidBossType","raidBossMovesWrapper","move3","cardNumber","raidBossNumber","cardOptionsToImage","folder","supertype","filePath","Object","values","param","variation","getCardImage","imagePath","baseSet","CardDisplay","useState","setImagePath","set","newImage","id","hasWhiteText","backgroundImage","Trainer","Energy","Pokemon","RaidBoss","cardInfoWhite","illustrator","customSetIcon","setIcon","number","rotation","setNumber","totalInSet","rarityIcon","imageLayer1","image","imageLayer2","background","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","InputLabel","horizontal","buttons","children","htmlFor","input","inputLabel","inputLabelButtonWrapper","button","icon","title","inputLabelButton","onClick","preventDefault","Checkbox","checked","setter","onChange","currentTarget","inputField","checkbox","checkboxFake","faCheck","checkboxIcon","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","isEnergy","wrapper","newMoveCost","find","faCaretUp","splice","indexOf","faCaretDown","ImageInput","info","croppable","cropperSetter","setImage","inputRef","useRef","initialRender","acceptedTypes","current","faCropAlt","faTimes","ref","target","files","includes","window","URL","createObjectURL","file","accept","join","Input","min","inputTextarea","Select","selectRef","select","createImage","url","Promise","resolve","reject","Image","addEventListener","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","createElement","ctx","getContext","maxSize","width","height","safeArea","sqrt","translate","drawImage","getImageData","putImageData","x","y","toBlob","Button","buttonIcon","selectCardOptions","selectCardOptionsState","CardCreatorPage","dispatch","useDispatch","useSelector","importingCard","initialImported","importingTrigger","setImportingTrigger","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","raidLevel","setRaidLevel","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","raidLevelRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasCustomSetIcon","setHasCustomSetIcon","setCustomSetIcon","cropArea","setCropArea","cropZoom","setCropZoom","cropImage","setCropImage","croppedAreaPixels","setCroppedAreaPixels","currentCropSetter","setCurrentCropSetter","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","move3Name","setMove3Name","move3Text","setMove3Text","move3Damage","setMove3Damage","dataInitialised","useCallback","selectedIndex","newSupertype","newType","newSubtype","newVariation","newRarity","makeCard","importCard","cardObj","result","typeId","newBaseSet","baseSetId","findIndex","t","supertypeId","subtypeId","setId","newSet","weaknessTypeId","newWeaknessType","resistanceTypeId","newResistanceType","rotationId","newRotation","variationId","rarityId","rarityIconId","newRarityIcon","resetCropper","imageSetter","form","seperator","faPaste","navigator","clipboard","readText","hasSubtypes","subtypeOptional","hasVariations","includesType","includesSubtype","includesVariation","newValue","round","cropperWrapper","crop","zoom","cropSize","maxZoom","minZoom","restrictPosition","zoomSpeed","aspect","onCropChange","location","onCropComplete","croppedArea","cap","onZoomChange","newZoom","cropperImage","faCheckSquare","buttonCrop","croppedImage","faFileDownload","buttonDownload","getElementById","htmlToImage","toPng","dataUrl","download","faClipboard","exportCard","cardToImportedCard","writeText","cardWrapper","App","header","headerCircle","content","exact","CardCreator","garbodor","pikachu","footer","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.121775f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__2k9VT\",\"horizontal\":\"Form_horizontal__2i_Ue\",\"inputField\":\"Form_inputField__1pjcv\",\"inputLabel\":\"Form_inputLabel__CXWOW\",\"inputLabelButton\":\"Form_inputLabelButton__mCJ5a\",\"inputTextarea\":\"Form_inputTextarea__2AEgG\",\"info\":\"Form_info__1PXQH\",\"button\":\"Form_button__3sNKY\",\"file\":\"Form_file__oVjgK\",\"buttonIcon\":\"Form_buttonIcon__3X1Am\",\"checkbox\":\"Form_checkbox__3QBsm\",\"checkboxFake\":\"Form_checkboxFake__IO-Zf\",\"checkboxIcon\":\"Form_checkboxIcon__L-pqr\",\"select\":\"Form_select__2lX5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__39l5j\",\"form\":\"CardCreator_form__2oeQ5\",\"seperator\":\"CardCreator_seperator__9bSGl\",\"info\":\"CardCreator_info__1GyxI\",\"cardWrapper\":\"CardCreator_cardWrapper__VrWy-\",\"cropperWrapper\":\"CardCreator_cropperWrapper__1jJ2C\",\"cropperImage\":\"CardCreator_cropperImage__15Kbu\",\"buttonCrop\":\"CardCreator_buttonCrop__30TIq\",\"buttonDownload\":\"CardCreator_buttonDownload__fupGw\"};","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\ninterface Response<T> {\r\n  data: T;\r\n}\r\n\r\nfunction mapResponse<T>(response: Response<T>): T {\r\n  return response.data;\r\n}\r\n\r\nexport const defaultHeaders = {\r\n  'accept': 'application/json',\r\n};\r\n\r\nexport default async function fetchApi<T>(endpoint: string, options: AxiosRequestConfig) {\r\n  const baseUrl: string = process.env.REACT_APP_API_URL || '';\r\n\r\n  return axios(`${baseUrl}${endpoint}`, options)\r\n    .then((response: AxiosResponse<any>) => {\r\n      const responseData = response.data\r\n        ? mapResponse<T>(response)\r\n        : ((response as unknown) as T);\r\n      return responseData;\r\n    })\r\n    .catch((error) => {\r\n      return {\r\n        code: error.response.status,\r\n        message: error.response.data.error,\r\n      };\r\n    });\r\n}\r\n","import fetchApi, { defaultHeaders } from 'utils/fetchApi';\r\nimport { CardOptionsResponse, ErrorResponse } from 'interfaces/http';\r\n\r\nexport const fetchCardOptions = () =>\r\n  fetchApi<CardOptionsResponse | ErrorResponse>('/data/cardOptions.json', {\r\n    method: 'GET',\r\n    headers: {\r\n      ...defaultHeaders,\r\n    },\r\n  });\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { fetchCardOptions } from 'services/http/cardOptionsRequest';\r\nimport * as actionTypes from './actionTypes';\r\nimport { httpToNormalType } from 'utils/http';\r\nimport { CardOptionsResponse } from 'interfaces/http';\r\nimport { CardOptions } from 'interfaces';\r\n\r\nexport function* getCardOptions() {\r\n  try {\r\n    const response = yield call(fetchCardOptions);\r\n    if (!response.error) {\r\n      yield put({ type: actionTypes.GET_CARD_OPTIONS_SUCCESS, payload: httpToNormalType<CardOptionsResponse, CardOptions>(response) });\r\n      return response;\r\n    } else {\r\n      yield put({ type: actionTypes.GET_CARD_OPTIONS_FAILED, payload: response });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: actionTypes.GET_CARD_OPTIONS_FAILED, payload: error });\r\n  }\r\n}\r\n\r\n\r\nexport default function* cardOptionsSaga() {\r\n  yield takeLatest(actionTypes.GET_CARD_OPTIONS, getCardOptions);\r\n}\r\n","export const GET_CARD_OPTIONS         = 'GET_CARD_OPTIONS';\r\nexport const GET_CARD_OPTIONS_SUCCESS = 'GET_CARD_OPTIONS_SUCCESS';\r\nexport const GET_CARD_OPTIONS_FAILED  = 'GET_CARD_OPTIONS_FAILED';\r\n","import camelcaseKeys from 'camelcase-keys';\r\n\r\nexport const httpToNormalType = <HttpType, NormalType>(obj: HttpType): NormalType =>\r\n  camelcaseKeys(obj, { deep: true }) as unknown as NormalType;\r\n\r\n","import { all } from 'redux-saga/effects';\r\nimport cardOptionsSaga from './ducks/cardOptions/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([cardOptionsSaga(),]);\r\n}\r\n","import { RootState } from 'redux/store';\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: RootState) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n  }\r\n  return undefined;\r\n};\r\n","import { createAction } from 'typesafe-actions';\r\nimport * as actionTypes from './actionTypes';\r\nimport { ErrorResponse } from 'interfaces/http';\r\nimport { CardOptions } from 'interfaces';\r\n\r\nexport const getCardOptions = createAction(actionTypes.GET_CARD_OPTIONS)();\r\nexport const getCardOptionsSuccess = createAction(actionTypes.GET_CARD_OPTIONS_SUCCESS)<CardOptions>();\r\nexport const getCardOptionsFailed = createAction(actionTypes.GET_CARD_OPTIONS_FAILED)<ErrorResponse>();\r\n","import { ActionType, createReducer } from 'typesafe-actions';\r\nimport * as actions from './actions';\r\nimport { ErrorResponse } from 'interfaces/http';\r\nimport { CardOptions } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error?: ErrorResponse,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nexport type CardOptionsActions = ActionType<typeof actions>;\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: undefined,\r\n  cardOptions: {\r\n    supertypes: [],\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = createReducer<CardOptionsState, CardOptionsActions>(initialState)\r\n  .handleAction(actions.getCardOptions, (state) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    error: initialState.error,\r\n  }))\r\n  .handleAction(actions.getCardOptionsSuccess, (state, action) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    cardOptions: action.payload,\r\n    error: initialState.error,\r\n  }))\r\n  .handleAction(actions.getCardOptionsFailed, (state, action) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: action.payload,\r\n  }));\r\n","import {\r\n  combineReducers,\r\n  createStore,\r\n  CombinedState,\r\n  applyMiddleware,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './rootSaga';\r\nimport { loadState, saveState } from 'utils/localStorage';\r\nimport {\r\n  CardOptionsState,\r\n  CardOptionsActions,\r\n  cardOptionsReducer,\r\n} from './ducks/cardOptions/reducer';\r\n\r\nexport type RootActions = CardOptionsActions;\r\n\r\nexport interface RootState {\r\n  cardOptions: CardOptionsState;\r\n}\r\n\r\nconst rootReducer = combineReducers<RootState>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  trace: true,\r\n  actionCreators: {},\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst initialState = loadState();\r\n\r\nexport const store = createStore<\r\n  CombinedState<RootState>,\r\n  RootActions,\r\n  unknown,\r\n  null\r\n>(rootReducer, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\r\nimport { Rarity, Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport classnames from 'classnames';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  subname?: string,\r\n  rarity?: Rarity\r\n}\r\n\r\nconst TrainerCard: React.FC<Props> = ({ name, description, type, subname, rarity }) => <>\r\n  <span className={styles.name}>{formatText(name)}</span>\r\n  <div className={classnames(styles.descriptionWrapper, {\r\n    [styles.descriptionWrapperTrainerOutline]: !!rarity?.hasVStyle,\r\n  })}>\r\n    <p className={styles.description}>{formatText(description)}</p>\r\n  </div>\r\n  {type?.hasSubname && <span className={styles.subname}>{formatText(subname)}</span>}\r\n</>\r\n\r\nexport default TrainerCard;\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport classnames from 'classnames';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  typeImage?: string,\r\n}\r\n\r\nconst EnergyCard: React.FC<Props> = ({ name, description, type, typeImage }) => <>\r\n  {type?.hasSpecialStyle && <>\r\n    <span className={styles.name}>{formatText(name)}</span>\r\n    <div className={classnames(styles.descriptionWrapper, styles.descriptionWrapperEnergy)}>\r\n      <p className={styles.description}>{formatText(description)}</p>\r\n    </div>\r\n  </>}\r\n  {typeImage &&\r\n    <img src={typeImage} alt=''\r\n      className={classnames(styles.typeImage, {\r\n        [styles.typeImageSpecial]: type?.shortName === 'Special'\r\n      })}\r\n    />\r\n  }\r\n</>\r\n\r\nexport default EnergyCard;\r\n","export const relativePathPrefix = (path: string): string  => {\n  const value = `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\n  console.log(process.env.REACT_APP_RELATIVE_PREFIX)\n  console.log(value);\n  return value;\n};\n","import React, { useEffect } from 'react';\nimport { Card, Move, MoveType } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\nimport { relativePathPrefix } from 'utils/relativePathPrefix';\nimport classnames from 'classnames';\n\ninterface Props {\n  card: Card,\n}\n\nconst PokemonCard: React.FC<Props> = ({ card }) => {\n  const getMoveTotalCost = (move: Move) => move.energyCost.reduce((acc: number, currentValue: MoveType) => acc += currentValue.amount, 0);\n\n  useEffect(() => {\n    if(card.move1 && card.move2) {\n      let highestCost = Math.max(getMoveTotalCost(card.move1), getMoveTotalCost(card.move2));\n\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\n      moveNames.forEach((moveName) => {\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\n      });\n    }\n  }, [card.move1, card.move2]);\n\n  const formatMoveCost = (move: Move) => {\n    let totalAmount: number = 0;\n    const moveImages = move.energyCost.map((moveType) => {\n      const returnValue: JSX.Element[] = [];\n      for(let i = 0; i < moveType.amount; i++) {\n        totalAmount++;\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\n      }\n      return returnValue;\n    });\n\n    if(totalAmount === 0) {\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\n    } else {\n      return moveImages;\n    }\n  }\n\n  const formatMove = (move: Move, firstMove?: boolean): JSX.Element =>\n    <div className={classnames({\n      [styles.moveMultiple]: firstMove && card.move2,\n      [styles.move]: firstMove && !card.move2,\n      [styles.moveV]: card.subtype?.hasVStyle || card.rarity?.hasVStyle,\n    })}>\n      {move.name &&\n        <div className={styles.moveNameWrapper}>\n          <div className={styles.moveCost}>\n            {formatMoveCost(move)}\n          </div>\n          <span className={classnames(styles.moveName, 'moveName')}>{move.name}</span>\n          <span className={styles.moveDamage}>{move.damage}</span>\n        </div>\n      }\n      <p className={classnames(styles.moveText, {\n        [styles.moveTextV]: card.subtype?.hasVStyle,\n      })}>{formatText(move.text)}</p>\n    </div>\n\n  return <>\n    <span className={classnames(styles.name, styles.namePokemon, {\n      [styles.nameOutline]: card.rarity?.hasNameOutline || card.subtype?.hasNameOutline,\n    })}>\n      {formatText(card.name)}\n      {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\n      {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\n      {card.rarity?.hasStarSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/star_icon.png')} className={styles.nameIconStar} alt='' />}\n    </span>\n    <div className={classnames(styles.hitpointsWrapper, {\n      [styles.hitpointsWrapperV]: card.subtype?.hasVStyle,\n      [styles.hitpointsWrapperBlackOutline]: card.rarity?.hasVStyle,\n    })}>\n      <span className={styles.hitpointsHP}>HP</span>\n      <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\n    </div>\n    {(card.subtype?.hasPrevolve && card.prevolveName) &&\n      <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\n    }\n    {(card.subtype?.hasPokedexEntry && !card.rarity?.hasVStyle && card.pokedexEntry) &&\n      <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\n    }\n    <div className={classnames(styles.movesWrapper, {\n      [styles.movesWrapperV]: card.subtype?.hasVStyle || card.rarity?.hasVStyle,\n    })}>\n      {card.ability &&\n        <div className={styles.ability}>\n          <div className={styles.abilityNameWrapper}>\n            {card.subtype?.hasVStyle ?\n              <img className={classnames(styles.abilityIcon, styles.abilityIconV)} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\n              :\n              <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\n            }\n            <span className={classnames(styles.moveName, 'moveName')}>{card.ability.name}</span>\n          </div>\n          <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\n        </div>\n      }\n      {card.move1 && formatMove(card.move1, true)}\n      {card.move2 && formatMove(card.move2)}\n    </div>\n    <div className={classnames(styles.typeBar, {\n      [styles.whiteText]: !card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText,\n    })}>\n      {card.weaknessType &&\n        <span className={styles.weakness}>\n          <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\n          <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\n        </span>\n      }\n      {card.resistanceType &&\n        <span className={styles.resistance}>\n          <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\n          <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\n        </span>\n      }\n      <div className={styles.retreatCost}>\n        {card.retreatCost ? Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\n          i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\n        ) : null}\n      </div>\n    </div>\n    {!card.subtype?.noDescription &&\n      <div className={classnames(styles.descriptionWrapper, styles.descriptionWrapperPokemon, {\n        [styles.descriptionWrapperPokemonOutline]: card.rarity?.hasVStyle,\n      })}>\n        <p className={styles.description}>{formatText(card.description)}</p>\n      </div>\n    }\n    {(card.subtype?.hasPrevolve && card.prevolveImage) &&\n      <div className={styles.prevolveImageWrapper}>\n        <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\n      </div>\n    }\n  </>\n}\n\nexport default PokemonCard;\n","import React from 'react';\r\nimport { Card, Move, BaseMove } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'utils/relativePathPrefix';\r\nimport classnames from 'classnames';\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\nconst RaidBossCard: React.FC<Props> = ({ card }) => {\r\n  const damageHasSymbol = (damage: string = ''): boolean => /[^\\d]/.test(damage);\r\n\r\n  const formatMove = (move: Move | BaseMove): JSX.Element =>\r\n    <div className={styles.raidBossMove}>\r\n      <span className={styles.raidBossMoveName}>{move.name}</span>\r\n      <p className={styles.raidBossMoveText}>{move.text}</p>\r\n      <span className={classnames(styles.raidBossMoveDamage, {\r\n        [styles.raidBossMoveDamageShoved]: damageHasSymbol(move.damage),\r\n      })}>\r\n        {move.damage}\r\n      </span>\r\n    </div>\r\n\r\n  return <>\r\n    <span className={classnames(styles.name, styles.nameRaidBoss, styles.nameOutline)}>\r\n      {formatText(card.name)}\r\n      <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />\r\n    </span>\r\n    <div className={classnames(styles.hitpointsWrapper, styles.hitpointsWrapperRaidBoss)}>\r\n      <span className={styles.hitpointsHP}>HP</span>\r\n      <span className={styles.hitpoints}>{card.hitpoints}</span>\r\n    </div>\r\n    <img src={relativePathPrefix(`/assets/icons_symbols/types/${card.type?.shortName}_border.png`)} className={styles.raidBossType} alt={card.type?.name} />\r\n    <div className={styles.raidBossMovesWrapper}>\r\n      {card.move1 && formatMove(card.move1)}\r\n      {card.move2 && formatMove(card.move2)}\r\n      {card.move3 && formatMove(card.move3)}\r\n    </div>\r\n    {card.cardNumber &&\r\n      <div className={styles.raidBossNumber}>\r\n        {card.cardNumber}\r\n      </div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default RaidBossCard;\r\n","import { ImagePathOptions, MoveType, ImportedCard, Card } from \"interfaces\";\nimport { relativePathPrefix } from \"./relativePathPrefix\";\n\nexport const cardToImportedCard = (card: Card): ImportedCard => ({\n  name: card.name,\n  subname: card.subname,\n  backgroundImage: card.backgroundImage,\n  imageLayer1: card.imageLayer1,\n  imageLayer2: card.imageLayer2,\n  typeImage: card.typeImage,\n  customSetIcon: card.customSetIcon,\n  cardNumber: card.cardNumber,\n  totalInSet: card.totalInSet,\n  hitpoints: card.hitpoints,\n  illustrator: card.illustrator,\n  weaknessAmount: card.weaknessAmount,\n  resistanceAmount: card.resistanceAmount,\n  retreatCost: card.retreatCost,\n  prevolveName: card.prevolveName,\n  prevolveImage: card.prevolveImage,\n  pokedexEntry: card.pokedexEntry,\n  description: card.description,\n  raidLevel: card.raidLevel,\n  supertypeId: card.supertype?.id,\n  baseSetId: card.baseSet?.id,\n  setId: card.set?.id,\n  typeId: card.type?.id,\n  weaknessTypeId: card.weaknessType?.id,\n  resistanceTypeId: card.resistanceType?.id,\n  subtypeId: card.subtype?.id,\n  rarityId: card.rarity?.id,\n  variationId: card.variation?.id,\n  rotationId: card.rotation?.id,\n  rarityIconId: card.rarityIcon?.id,\n  ability: card.ability,\n  move1: card.move1 ? {\n    name: card.move1.name,\n    damage: card.move1.damage,\n    text: card.move1.text,\n    energyCost: card.move1.energyCost.map((moveType: MoveType) => ({\n      amount: moveType.amount,\n      typeId: moveType.type.id,\n    })),\n  } : undefined,\n  move2: card.move2 ? {\n    name: card.move2.name,\n    damage: card.move2.damage,\n    text: card.move2.text,\n    energyCost: card.move2.energyCost.map((moveType: MoveType) => ({\n      amount: moveType.amount,\n      typeId: moveType.type.id,\n    })),\n  } : undefined,\n  move3: card.move3 ? {\n    name: card.move3.name,\n    damage: card.move3.damage,\n    text: card.move3.text,\n  } : undefined,\n});\n\nconst cardOptionsToImage = (options: ImagePathOptions, folder?: string, supertype?: string) => {\n  // Format the options according to the formatting defined in the README\n  let filePath: string = relativePathPrefix(`/assets/${options.supertype || supertype}/`);\n  if(folder) {\n    filePath += `${folder}/`;\n  }\n  Object.values(options).forEach((param: string, i: number) => {\n    if(param !== undefined && param !== 'default') {\n      if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\n        (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\n        (options.rarity === 'Promo' && param === 'Basic')) {\n        return;\n      }\n      if(i !== 0) {\n        filePath += '_';\n      }\n      filePath += param;\n      if(param === 'Rainbow') {\n        if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\n          filePath += `_${options.variation}`;\n        }\n      }\n      if(param === 'V' && !options.rarity) {\n        filePath += '_Basic';\n      }\n    }\n  });\n  return `${filePath}.png`;\n}\n\nexport const getCardImage = (options: ImagePathOptions): string => {\n  let imagePath: string;\n  switch(options.supertype) {\n    case 'Pokemon':\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, subtype: options.subtype, variation: options.variation,\n        rarity: options.rarity, type: options.type }, options.type, options.supertype);\n      break;\n    case 'Energy':\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type });\n      break;\n    case 'Trainer':\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type, subtype: options.subtype, rarity: options.rarity });\n      break;\n    case 'RaidBoss':\n      return relativePathPrefix('/assets/RaidBoss/pikachu.png');\n    default:\n      imagePath = '';\n  }\n  return imagePath;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'interfaces';\nimport TrainerCard from './Trainer';\nimport styles from './CardDisplay.module.scss';\nimport EnergyCard from './Energy';\nimport PokemonCard from './Pokemon';\nimport RaidBossCard from './RaidBoss';\nimport { getCardImage } from 'utils/card';\nimport { relativePathPrefix } from 'utils/relativePathPrefix';\nimport classnames from 'classnames';\n\ninterface Props {\n  card: Card,\n}\n\nconst CardDisplay: React.FC<Props> = ({ card }) => {\n  const [imagePath, setImagePath] = useState<string>();\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\n\n  useEffect(() => {\n    if(supertype && type && baseSet) {\n      const newImage: string = getCardImage({baseSet: baseSet.shortName, type: type.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype.shortName, variation: variation?.shortName})\n      setImagePath(newImage);\n    }\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\n\n  return (\n    <div id='card'\n      className={classnames(styles.card, {\n        [styles.whiteText]: card.type?.hasWhiteText && !card.rarity?.hasVStyle\n      })}\n    >\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      {supertype?.shortName === 'Trainer' && <TrainerCard name={card.name} subname={card.subname} description={card.description} type={card.type} rarity={card.rarity} />}\n      {supertype?.shortName === 'Energy' && <EnergyCard name={card.name} description={card.description} type={card.type} typeImage={card.typeImage} />}\n      {supertype?.shortName === 'Pokemon' && <PokemonCard card={card} />}\n      {supertype?.shortName === 'RaidBoss' && <RaidBossCard card={card} />}\n      {(!(supertype?.shortName === 'Energy' && !card.type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss') && <>\n        <div\n          className={classnames({\n            [styles.cardInfoWhite]: card.rarity?.hasNameOutline || card.subtype?.hasNameOutline\n          })}\n        >\n          {(supertype?.shortName !== 'Energy' && card.illustrator) && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n          {card.customSetIcon ?\n            <img src={card.customSetIcon} alt='' className={styles.setIcon} />\n            :\n            card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />\n          }\n          {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n          <span className={styles.setNumber}>\n            {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n            {card.rarityIcon &&\n              <img alt={card.rarityIcon.name} className={styles.rarityIcon}\n                src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${(card.type?.hasWhiteText || card.subtype?.hasVStyle) ? '_white' : ''}.png`)}\n              />\n            }\n          </span>\n        </div>\n      </>}\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n      <div className={styles.background} />\n    </div>\n  )\n}\n\nexport default CardDisplay;\n\nexport const formatText = (text: string | undefined) => {\n  if(text) {\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\n    if(chars) {\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\n      const textNoChars = text.split(/\\[.*?\\]/g);\n      const returnText: (JSX.Element | string)[] = [];\n      textNoChars.forEach((textElm, i) => {\n        returnText.push(textElm);\n        if(charsArr.length > i) {\n          if(charsArr[i].length > 1) {\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\n          } else {\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\n          }\n        }\n      });\n      return returnText;\n    } else {\n      return text;\n    }\n  } else {\n    return false;\n  }\n}\n","import React from 'react';\nimport styles from '../Form.module.scss';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\n\ninterface LabelButton {\n  name: string,\n  icon: IconDefinition,\n  onClick: () => void,\n}\n\ninterface Props {\n  shortName: string,\n  name?: string,\n  horizontal?: boolean,\n  buttons?: LabelButton[],\n}\n\nconst InputLabel: React.FC<Props> = ({ shortName, name, horizontal, buttons, children }) =>\n  <label htmlFor={shortName} className={classnames(styles.input, {\n    [styles.horizontal]: horizontal,\n  })}>\n    {name &&\n      <div className={styles.inputLabel}>\n        <span>{name}</span>\n        {buttons &&\n          <span className={styles.inputLabelButtonWrapper}>\n            {buttons.map((button: LabelButton, i: number) =>\n              <FontAwesomeIcon icon={button.icon} title={button.name} className={styles.inputLabelButton} key={i}\n                onClick={(e) => {\n                  e.preventDefault();\n                  button.onClick();\n                }}\n              />\n            )}\n          </span>\n        }\n      </div>\n    }\n    {children}\n  </label>\n\nexport default InputLabel;\n","import React from 'react';\nimport styles from '../Form.module.scss';\nimport InputLabel from '../InputLabel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport classnames from 'classnames';\n\ninterface Props {\n  shortName: string,\n  name: string,\n  checked: boolean,\n  setter: (newValue: boolean) => void,\n}\n\nconst Checkbox: React.FC<Props> = ({ shortName, name, checked, setter }) =>\n  <InputLabel shortName={shortName} name={name}>\n    <input\n      id={shortName}\n      name={shortName}\n      checked={checked}\n      onChange={e => setter(e.currentTarget.checked)}\n      className={classnames(styles.inputField, styles.checkbox)}\n      type='checkbox'\n    />\n    <div className={styles.checkboxFake}>\n      {checked && <FontAwesomeIcon icon={faCheck} className={styles.checkboxIcon} />}\n    </div>\n  </InputLabel>\n\nexport default Checkbox;\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './EnergyPicker.module.scss';\r\nimport { MoveType, Type } from 'interfaces';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { relativePathPrefix } from 'utils/relativePathPrefix';\r\n\r\ninterface Props {\r\n  label: String,\r\n  types: Type[],\r\n  moveCost: MoveType[],\r\n  setMoveCost: (moveTypes: MoveType[]) => void,\r\n}\r\n\r\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\r\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const newMoveTypes: MoveType[] = [];\r\n    types.forEach((type) => {\r\n      if(type.isEnergy) {\r\n        newMoveTypes.push({\r\n          type,\r\n          amount: 0,\r\n        });\r\n      }\r\n    });\r\n    setMoveTypes(newMoveTypes);\r\n  }, [types]);\r\n\r\n  return (\r\n    <div>\r\n      <span>{label}</span>\r\n      <div className={styles.wrapper}>\r\n        {moveTypes.map((moveType, i) =>\r\n          <div className={styles.type} key={i}>\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount + 1;\r\n              } else {\r\n                type = {\r\n                  type: moveType.type,\r\n                  amount: 1,\r\n                };\r\n                newMoveCost.push(type);\r\n              }\r\n              setMoveCost(newMoveCost);\r\n            }}>\r\n              <FontAwesomeIcon icon={faCaretUp} />\r\n            </span>\r\n            <img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount - 1;\r\n                if(type.amount <= 0) {\r\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\r\n                }\r\n                setMoveCost(newMoveCost);\r\n              }\r\n            }}>\r\n              <FontAwesomeIcon icon={faCaretDown} />\r\n            </span>\r\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnergyPicker;\r\n","import React, { useRef, useState, useEffect } from 'react';\nimport styles from '../Form.module.scss';\nimport InputLabel from '../InputLabel';\nimport { faCropAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  shortName: string,\n  name?: string,\n  info?: string,\n  setter: (newValue:  any) => void,\n  onChange?: (newImage: string) => void,\n  croppable?: boolean,\n  cropperSetter?: (newImage: string, imageSetter: () => void) => void,\n}\n\nconst ImageInput: React.FC<Props> = ({ shortName, name, info, setter, onChange, croppable, cropperSetter }) => {\n  const [image, setImage] = useState<string>('none');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const initialRender = useRef<boolean>(true);\n  const acceptedTypes = useRef<string[]>(['image/png', 'image/jpeg'])\n\n  useEffect(() => {\n    if(initialRender.current) {\n      initialRender.current = false;\n    } else {\n      setter(image);\n      onChange && onChange(image);\n      cropperSetter && cropperSetter(image, () => setter);\n    }\n  }, [image, onChange, setter]);\n\n  return (\n    <InputLabel shortName={shortName} name={name} horizontal buttons={croppable ? [\n      {\n        name: 'Crop',\n        icon: faCropAlt,\n        onClick: () => cropperSetter && cropperSetter(image, () => setter),\n      },\n      {\n        name: 'Remove',\n        icon: faTimes,\n        onClick: () => {\n          setImage('');\n          if(inputRef.current) {\n            inputRef.current.value = '';\n          }\n        },\n      },\n    ] : []}>\n      {info && <span className={styles.info}>{info}</span>}\n      <input\n        ref={inputRef}\n        id={shortName}\n        name={shortName}\n        onChange={e => {\n          if(e.target.files && e.target.files[0] && acceptedTypes.current.includes(e.target.files[0].type)) {\n            setImage(window.URL.createObjectURL(e.target.files[0]));\n          } else {\n            setImage('');\n            e.target.value = '';\n          }\n        }}\n        className={styles.file}\n        type='file'\n        accept={acceptedTypes.current.join(',')}\n      />\n    </InputLabel>\n  )\n}\n\nexport default ImageInput;\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\nimport classnames from 'classnames';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  value: string | number,\r\n  type: 'text' | 'number' | 'textarea',\r\n  min?: number,\r\n  max?: number,\r\n  horizontal?: boolean,\r\n  setter: (newValue: any) => void,\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ shortName, name, value, type, min, max, setter, horizontal }) =>\r\n  <InputLabel shortName={shortName} name={name} horizontal={horizontal || type === 'textarea'}>\r\n    {type !== 'textarea' ?\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        type={type}\r\n        min={min}\r\n        max={max}\r\n        onChange={e => setter(type === 'text' ? e.currentTarget.value : +e.currentTarget.value)}\r\n        className={styles.inputField}\r\n      />\r\n      :\r\n      <textarea\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        onChange={e => setter(e.currentTarget.value)}\r\n        className={classnames(styles.inputField, styles.inputTextarea)}\r\n      ></textarea>\r\n    }\r\n  </InputLabel>\r\n\r\nexport default Input;\r\n","import React, { ChangeEvent } from 'react';\nimport styles from '../Form.module.scss';\nimport InputLabel from '../InputLabel';\nimport classnames from 'classnames';\n\ninterface Props {\n  shortName: string,\n  name: string,\n  selectRef?: React.RefObject<HTMLSelectElement>,\n  onChange: (e: ChangeEvent<HTMLSelectElement>) => void,\n}\n\nconst Select: React.FC<Props> = ({ shortName, name, selectRef, onChange, children }) =>\n  <InputLabel shortName={shortName} name={name}>\n    <select id={shortName} ref={selectRef} name={shortName} className={classnames(styles.inputField, styles.select)} onChange={onChange}>\n      {children}\n    </select>\n  </InputLabel>\n\nexport default Select;\n","import { Area } from \"react-easy-crop/types\"\r\n\r\nconst createImage = (url: string): Promise<HTMLImageElement> =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} imageSrc - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n */\r\nconst getCroppedImg = async (imageSrc: string, pixelCrop: Area): Promise<string> => {\r\n  let image: HTMLImageElement;\r\n  try {\r\n    image = await createImage(imageSrc);\r\n  } catch(e) {\r\n    return '';\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  if(ctx) {\r\n    // translate canvas context to a central location on image to allow rotating around the center.\r\n    ctx.translate(safeArea / 2, safeArea / 2);\r\n    ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n    // draw rotated image and store data.\r\n    ctx.drawImage(\r\n      image,\r\n      safeArea / 2 - image.width * 0.5,\r\n      safeArea / 2 - image.height * 0.5,\r\n    );\r\n    const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n    // set canvas width to final desired crop size - this will clear existing context\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // paste generated rotate image with correct offsets for x,y crop values.\r\n    ctx.putImageData(\r\n      data,\r\n      0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\r\n      0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y,\r\n    );\r\n  }\r\n\r\n  return new Promise(resolve =>\r\n    canvas.toBlob(\r\n      file => resolve(URL.createObjectURL(file)),\r\n      'image/png'\r\n    ));\r\n}\r\n\r\nexport default getCroppedImg;\r\n","import React, { MouseEvent } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classnames from 'classnames';\r\n\r\ninterface Props {\r\n  className?: string,\r\n  onClick?: (e: MouseEvent) => void,\r\n  icon?: IconDefinition,\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ className, onClick, icon, children }) =>\r\n  <button className={classnames(styles.button, className)} onClick={onClick}>\r\n    {icon && <FontAwesomeIcon className={styles.buttonIcon} icon={icon} />}\r\n    {children}\r\n  </button>\r\n\r\nexport default Button;\r\n","import { RootState } from 'redux/store';\n\nexport const selectCardOptionsState = (state: RootState) => state.cardOptions;\n\nexport const selectCardOptions = (state: RootState) => selectCardOptionsState(state).cardOptions;\n","import React, { useState, useEffect, useRef, Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card, ImportedCard, ImportedMoveType, Supertype } from 'interfaces';\r\nimport htmlToImage from 'html-to-image';\r\nimport download from 'downloadjs';\r\nimport styles from './CardCreator.module.scss';\r\nimport CardDisplay from 'components/CardDisplay';\r\nimport { Select, Input, Checkbox, ImageInput, EnergyPicker} from 'components/FormElements';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Point, Area } from 'react-easy-crop/types';\r\nimport getCroppedImg from 'cropImage';\r\nimport Button from 'components/FormElements/Button';\r\nimport { faPaste, faFileDownload, faClipboard, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { cardToImportedCard, getCardImage } from 'utils/card';\r\nimport { relativePathPrefix } from 'utils/relativePathPrefix';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectCardOptions } from 'redux/ducks/cardOptions/selectors';\r\nimport { getCardOptions } from 'redux/ducks/cardOptions/actions';\r\n\r\ninterface Props {\r\n  card?: ImportedCard,\r\n}\r\n\r\nconst CardCreatorPage: React.FC<Props> = ({ card }) => {\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n  const cardOptions = useSelector(selectCardOptions);\r\n\r\n  const importingCard = useRef<boolean>(false);\r\n  const initialImported = useRef<boolean>(false);\r\n  const [importingTrigger, setImportingTrigger] = useState<boolean>(false);\r\n  // Selectors\r\n  const [supertype, setSupertype] = useState<Supertype>();\r\n  const [type, setType] = useState<Type>();\r\n  const [baseSet, setBaseSet] = useState<BaseSet>();\r\n  const [set, setSet] = useState<Set>();\r\n  const [rotation, setRotation] = useState<Rotation>();\r\n  const [variation, setVariation] = useState<Variation>();\r\n  const [subtype, setSubtype] = useState<Subtype>();\r\n  const [rarity, setRarity] = useState<Rarity>();\r\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\r\n  const [weaknessType, setWeaknessType] = useState<Type>();\r\n  const [resistanceType, setResistanceType] = useState<Type>();\r\n  const [raidLevel, setRaidLevel] = useState<number>(1);\r\n  // Selector refs\r\n  const baseSetRef = useRef<HTMLSelectElement>(null);\r\n  const supertypeRef = useRef<HTMLSelectElement>(null);\r\n  const typeRef = useRef<HTMLSelectElement>(null);\r\n  const subtypeRef = useRef<HTMLSelectElement>(null);\r\n  const variationRef = useRef<HTMLSelectElement>(null);\r\n  const rarityRef = useRef<HTMLSelectElement>(null);\r\n  const setIconRef = useRef<HTMLSelectElement>(null);\r\n  const rotationRef = useRef<HTMLSelectElement>(null);\r\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\r\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\r\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\r\n  const raidLevelRef = useRef<HTMLSelectElement>(null);\r\n  // Inputs\r\n  const [name, setName] = useState<string>('');\r\n  const [prevolveName, setPrevolveName] = useState<string>('');\r\n  const [hitpoints, setHitpoints] = useState<number>(100);\r\n  const [subname, setSubname] = useState<string>('');\r\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\r\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\r\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\r\n  const [retreatCost, setRetreatCost] = useState<number>(1);\r\n  const [description, setDescription] = useState<string>('');\r\n  const [illustrator, setIllustrator] = useState<string>('');\r\n  const [cardNumber, setCardNumber] = useState<string>('');\r\n  const [totalInSet, setTotalInSet] = useState<string>('');\r\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\r\n  const [imageLayer1, setImageLayer1] = useState<string>('');\r\n  const [imageLayer2, setImageLayer2] = useState<string>('');\r\n  const [typeImage, setTypeImage] = useState<string>('');\r\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\r\n  const [hasCustomSetIcon, setHasCustomSetIcon] = useState<boolean>(false);\r\n  const [customSetIcon, setCustomSetIcon] = useState<string>('');\r\n  // Image cropper\r\n  const [cropArea, setCropArea] = useState<Point>({ x: 0, y: 0 });\r\n  const [cropZoom, setCropZoom] = useState<number>(1);\r\n  const [cropImage, setCropImage] = useState<string>('');\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState<Area>({ x: 0, y: 0, height: 0, width: 0 });\r\n  const [currentCropSetter, setCurrentCropSetter] = useState<Dispatch<SetStateAction<string>>>();\r\n  // Ability/Moves\r\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\r\n  const [abilityName, setAbilityName] = useState<string>('');\r\n  const [abilityText, setAbilityText] = useState<string>('');\r\n  const [move1Name, setMove1Name] = useState<string>('');\r\n  const [move1Damage, setMove1Damage] = useState<string>('');\r\n  const [move1Text, setMove1Text] = useState<string>('');\r\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\r\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\r\n  const [move2Name, setMove2Name] = useState<string>('');\r\n  const [move2Text, setMove2Text] = useState<string>('');\r\n  const [move2Damage, setMove2Damage] = useState<string>('');\r\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\r\n  const [move3Name, setMove3Name] = useState<string>('');\r\n  const [move3Text, setMove3Text] = useState<string>('');\r\n  const [move3Damage, setMove3Damage] = useState<string>('');\r\n\r\n  const dataInitialised = useCallback((): boolean => !!supertype, [supertype]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCardOptions());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!dataInitialised()) {\r\n      setSupertype(cardOptions.supertypes[0]);\r\n      setType(cardOptions.types[0]);\r\n      setWeaknessType(cardOptions.types[0]);\r\n      setSet(cardOptions.sets[0]);\r\n      setBaseSet(cardOptions.baseSets[0]);\r\n      setSubtype(cardOptions.subtypes[0]);\r\n      setRotation(cardOptions.rotations[0]);\r\n    }\r\n  }, [cardOptions, dataInitialised]);\r\n\r\n  /**\r\n   * Changes the types/subtypes etc to the first available one within their parent\r\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\r\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\r\n   */\r\n  useEffect(() => {\r\n    if(importingCard.current) {\r\n      return;\r\n    }\r\n    if(supertypeRef.current) {\r\n      const { selectedIndex, options } = supertypeRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newSupertype = cardOptions.supertypes.find((a: Supertype) => a.id === +value);\r\n      if(newSupertype && newSupertype !== supertype) {\r\n        setSupertype(newSupertype);\r\n      }\r\n    } else {\r\n      setSupertype(undefined);\r\n    }\r\n    if(typeRef.current) {\r\n      const { selectedIndex, options } = typeRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newType = cardOptions.types.find((a: Type) => a.id === +value);\r\n      if(newType && newType !== type) {\r\n        setType(newType);\r\n      }\r\n    } else {\r\n      setType(undefined);\r\n    }\r\n    if(subtypeRef.current) {\r\n      const { selectedIndex, options } = subtypeRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newSubtype = cardOptions.subtypes.find((a: Subtype) => a.id === +value);\r\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\r\n        setSubtype(newSubtype);\r\n      }\r\n    } else {\r\n      setSubtype(undefined);\r\n    }\r\n    if(variationRef.current) {\r\n      const { selectedIndex, options } = variationRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newVariation = cardOptions.variations.find((a: Variation) => a.id === +value);\r\n      if(newVariation && newVariation !== variation) {\r\n        setVariation(newVariation);\r\n      }\r\n    } else {\r\n      setVariation(undefined);\r\n    }\r\n    if(rarityRef.current) {\r\n      const { selectedIndex, options } = rarityRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newRarity = cardOptions.rarities.find((a: Rarity) => a.id === +value);\r\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\r\n        setRarity(newRarity);\r\n      }\r\n    } else {\r\n      setRarity(undefined);\r\n    }\r\n  }, [cardOptions, supertype, type, subtype, variation, rarity]);\r\n\r\n  /**\r\n   * Turns state data into a Card object\r\n   */\r\n  const makeCard = (): Card => ({\r\n    supertype,\r\n    baseSet,\r\n    type,\r\n    variation,\r\n    subtype,\r\n    rarity,\r\n    name: name || undefined,\r\n    prevolveName: prevolveName || undefined,\r\n    prevolveImage: prevolveImage || undefined,\r\n    hitpoints: hitpoints || undefined,\r\n    subname : subname || undefined,\r\n    typeImage: typeImage || undefined,\r\n    pokedexEntry: pokedexEntry || undefined,\r\n    ability: hasAbility ? {\r\n      name: abilityName,\r\n      text: abilityText,\r\n    } : undefined,\r\n    move1: move1Name ? {\r\n      name: move1Name,\r\n      text: move1Text,\r\n      damage: move1Damage,\r\n      energyCost: move1Cost,\r\n    } : undefined,\r\n    move2: (!hasAbility && hasSecondMove) || supertype?.shortName === 'RaidBoss' ? {\r\n      name: move2Name,\r\n      text: move2Text,\r\n      damage: move2Damage,\r\n      energyCost: move2Cost,\r\n    } : undefined,\r\n    move3: move3Name ? {\r\n      name: move3Name,\r\n      text: move3Text,\r\n      damage: move3Damage,\r\n    } : undefined,\r\n    weaknessType: supertype?.shortName === 'Pokemon' ? weaknessType : undefined,\r\n    weaknessAmount: supertype?.shortName === 'Pokemon' ? weaknessAmount : undefined,\r\n    resistanceType: supertype?.shortName === 'Pokemon' ? resistanceType : undefined,\r\n    resistanceAmount: supertype?.shortName === 'Pokemon' ? resistanceAmount : undefined,\r\n    retreatCost: supertype?.shortName === 'Pokemon' ? retreatCost : undefined,\r\n    illustrator: illustrator || undefined,\r\n    cardNumber: cardNumber || undefined,\r\n    totalInSet: totalInSet || undefined,\r\n    customSetIcon: hasCustomSetIcon && !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? customSetIcon : undefined,\r\n    set: !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? set : undefined,\r\n    rotation: !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? rotation : undefined,\r\n    rarityIcon: !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? rarityIcon : undefined,\r\n    description: description || undefined,\r\n    backgroundImage: backgroundImage || undefined,\r\n    imageLayer1: imageLayer1 || undefined,\r\n    imageLayer2: imageLayer2 || undefined,\r\n    raidLevel: supertype?.shortName === 'RaidBoss' ? raidLevel : undefined,\r\n  });\r\n\r\n  const downloadCard = () => {\r\n    const card = document.getElementById('card');\r\n    if(card) {\r\n      htmlToImage.toPng(card)\r\n        .then((dataUrl) => {\r\n          download(dataUrl, `${name || 'card'}${subtype?.hasVSymbol ? ' V' : subtype?.hasVMaxSymbol ? ' VMAX' : ''}.png`);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }\r\n\r\n  const exportCard = () => {\r\n    const card: Card = makeCard();\r\n    const exportCard: ImportedCard = cardToImportedCard(card);\r\n    navigator.clipboard.writeText(JSON.stringify(exportCard));\r\n  }\r\n\r\n  /**\r\n   * Sets all card data, selectors and energy pickers to certain values based on the cardObj parameter\r\n   */\r\n  const importCard = (cardObj: ImportedCard) => {\r\n    importingCard.current = true;\r\n    // Base values\r\n    setName(cardObj.name || '');\r\n    setPrevolveName(cardObj.prevolveName || '');\r\n    setPrevolveImage(relativePathPrefix(cardObj.prevolveImage || ''));\r\n    setHitpoints(cardObj.hitpoints || 0);\r\n    setSubname(cardObj.subname || '');\r\n    setTypeImage(relativePathPrefix(cardObj.typeImage || ''));\r\n    setPokedexEntry(cardObj.pokedexEntry || '');\r\n    setWeaknessAmount(cardObj.weaknessAmount || 0);\r\n    setResistanceAmount(cardObj.resistanceAmount || 0);\r\n    setRetreatCost(cardObj.retreatCost || 0);\r\n    setIllustrator(cardObj.illustrator || '');\r\n    setCardNumber(cardObj.cardNumber || '');\r\n    setTotalInSet(cardObj.totalInSet || '');\r\n    setDescription(cardObj.description || '');\r\n    setBackgroundImage(relativePathPrefix(cardObj.backgroundImage || ''));\r\n    setImageLayer1(relativePathPrefix(cardObj.imageLayer1 || ''));\r\n    setImageLayer2(relativePathPrefix(cardObj.imageLayer2 || ''));\r\n    if(cardObj.customSetIcon) {\r\n      setHasCustomSetIcon(true);\r\n      setCustomSetIcon(cardObj.customSetIcon);\r\n    }\r\n    if(cardObj.ability) {\r\n      setHasAbility(true);\r\n      setAbilityName(cardObj.ability.name);\r\n      setAbilityText(cardObj.ability.text);\r\n    }\r\n    if(cardObj.move1) {\r\n      setMove1Name(cardObj.move1.name);\r\n      setMove1Damage(cardObj.move1.damage);\r\n      setMove1Text(cardObj.move1.text);\r\n      setMove1Cost(cardObj.move1.energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\r\n        const newType: Type | undefined = cardOptions.types.find((a) => a.id === moveType.typeId);\r\n        if(newType) {\r\n          result.push({\r\n            amount: moveType.amount,\r\n            type: newType,\r\n          });\r\n        }\r\n        return result;\r\n      }, []));\r\n    }\r\n    if(cardObj.move2) {\r\n      setHasSecondMove(true);\r\n      setMove2Name(cardObj.move2.name);\r\n      setMove2Damage(cardObj.move2.damage);\r\n      setMove2Text(cardObj.move2.text);\r\n      setMove2Cost(cardObj.move2.energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\r\n        const newType: Type | undefined = cardOptions.types.find((a) => a.id === moveType.typeId);\r\n        if(newType) {\r\n          result.push({\r\n            amount: moveType.amount,\r\n            type: newType,\r\n          });\r\n        }\r\n        return result;\r\n      }, []));\r\n    }\r\n    if(cardObj.move3) {\r\n      setMove3Name(cardObj.move3.name);\r\n      setMove3Damage(cardObj.move3.damage);\r\n      setMove3Text(cardObj.move3.text);\r\n    }\r\n    // Selectors\r\n    const newBaseSet: BaseSet | undefined = cardOptions.baseSets.find((a) => a.id === cardObj.baseSetId);\r\n    if(newBaseSet) {\r\n      setBaseSet(newBaseSet);\r\n      if(baseSetRef.current && newBaseSet) {\r\n        baseSetRef.current.selectedIndex = Array.from(baseSetRef.current.options).findIndex((t) => +t.value === newBaseSet.id);\r\n      }\r\n    } else {\r\n      if(baseSetRef.current) {\r\n        baseSetRef.current.selectedIndex = 0;\r\n      }\r\n      setBaseSet(undefined);\r\n    }\r\n    const newSupertype: Supertype | undefined = cardOptions.supertypes.find((a) => a.id === cardObj.supertypeId);\r\n    if(newSupertype) {\r\n      setSupertype(newSupertype);\r\n      if(supertypeRef.current && newSupertype) {\r\n        supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => +t.value === newSupertype.id);\r\n      }\r\n    } else {\r\n      if(supertypeRef.current) {\r\n        supertypeRef.current.selectedIndex = 0;\r\n      }\r\n      setSupertype(undefined);\r\n    }\r\n    const newType: Type | undefined = cardOptions.types.find((a) => a.id === cardObj.typeId);\r\n    if(newType) {\r\n      setType(newType);\r\n      if(typeRef.current) {\r\n        typeRef.current.selectedIndex = Array.from(typeRef.current.options).findIndex((t) => +t.value === newType.id);\r\n      }\r\n    } else {\r\n      if(typeRef.current) {\r\n        typeRef.current.selectedIndex = 0;\r\n      }\r\n      setType(undefined);\r\n    }\r\n    if(cardObj.subtypeId) {\r\n      const newSubtype: Subtype | undefined = cardOptions.subtypes.find((a) => a.id === cardObj.subtypeId);\r\n      if(newSubtype) {\r\n        setSubtype(newSubtype);\r\n        if(subtypeRef.current) {\r\n          subtypeRef.current.selectedIndex = Array.from(subtypeRef.current.options).findIndex((t) => +t.value === newSubtype.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(subtypeRef.current) {\r\n        subtypeRef.current.selectedIndex = 0;\r\n      }\r\n      setSubtype(undefined);\r\n    }\r\n    if(cardObj.setId) {\r\n      const newSet: Set | undefined = cardOptions.sets.find((a) => a.id === cardObj.setId);\r\n      if(newSet) {\r\n        setSet(newSet);\r\n        if(setIconRef.current) {\r\n          setIconRef.current.selectedIndex = Array.from(setIconRef.current.options).findIndex((t) => +t.value === newSet.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(setIconRef.current) {\r\n        setIconRef.current.selectedIndex = 0;\r\n      }\r\n      setSet(undefined);\r\n    }\r\n    if(cardObj.weaknessTypeId) {\r\n      const newWeaknessType: Type | undefined = cardOptions.types.find((a) => a.id === cardObj.weaknessTypeId);\r\n      if(newWeaknessType) {\r\n        setWeaknessType(newWeaknessType);\r\n        if(weaknessTypeRef.current) {\r\n          weaknessTypeRef.current.selectedIndex = Array.from(weaknessTypeRef.current.options).findIndex((t) => +t.value === newWeaknessType.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(weaknessTypeRef.current) {\r\n        weaknessTypeRef.current.selectedIndex = 0;\r\n      }\r\n      setWeaknessType(undefined);\r\n    }\r\n    if(cardObj.resistanceTypeId) {\r\n      const newResistanceType: Type | undefined = cardOptions.types.find((a) => a.id === cardObj.resistanceTypeId);\r\n      if(newResistanceType) {\r\n        setResistanceType(newResistanceType);\r\n        if(resistanceTypeRef.current) {\r\n          resistanceTypeRef.current.selectedIndex = Array.from(resistanceTypeRef.current.options).findIndex((t) => +t.value === newResistanceType.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(resistanceTypeRef.current) {\r\n        resistanceTypeRef.current.selectedIndex = 0;\r\n      }\r\n      setResistanceType(undefined);\r\n    }\r\n    if(cardObj.rotationId) {\r\n      const newRotation: Rotation | undefined = cardOptions.rotations.find((a) => a.id === cardObj.rotationId);\r\n      if(newRotation) {\r\n        setRotation(newRotation);\r\n        if(rotationRef.current) {\r\n          rotationRef.current.selectedIndex = Array.from(rotationRef.current.options).findIndex((t) => +t.value === newRotation.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(rotationRef.current) {\r\n        rotationRef.current.selectedIndex = 0;\r\n      }\r\n      setRotation(undefined);\r\n    }\r\n    if(cardObj.variationId) {\r\n      const newVariation: Variation | undefined = cardOptions.variations.find((a) => a.id === cardObj.variationId);\r\n      if(newVariation) {\r\n        setVariation(newVariation);\r\n        if(variationRef.current) {\r\n          variationRef.current.selectedIndex = Array.from(variationRef.current.options).findIndex((t) => +t.value === newVariation.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(variationRef.current) {\r\n        variationRef.current.selectedIndex = 0;\r\n      }\r\n      setVariation(undefined);\r\n    }\r\n    if(cardObj.rarityId) {\r\n      const newRarity: Rarity | undefined = cardOptions.rarities.find((a) => a.id === cardObj.rarityId);\r\n      if(newRarity) {\r\n        setRarity(newRarity);\r\n        if(rarityRef.current) {\r\n          rarityRef.current.selectedIndex = Array.from(rarityRef.current.options).findIndex((t) => +t.value === newRarity.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(rarityRef.current) {\r\n        rarityRef.current.selectedIndex = 0;\r\n      }\r\n      setRarity(undefined);\r\n    }\r\n    if(cardObj.rarityIconId) {\r\n      const newRarityIcon: RarityIcon | undefined = cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIconId);\r\n      if(newRarityIcon) {\r\n        setRarityIcon(newRarityIcon);\r\n        if(rarityIconRef.current) {\r\n          rarityIconRef.current.selectedIndex = Array.from(rarityIconRef.current.options).findIndex((t) => +t.value === newRarityIcon.id);\r\n        }\r\n      }\r\n    } else {\r\n      if(rarityIconRef.current) {\r\n        rarityIconRef.current.selectedIndex = 0;\r\n      }\r\n      setRarityIcon(undefined);\r\n    }\r\n    if(cardObj.raidLevel) {\r\n      setRaidLevel(cardObj.raidLevel);\r\n      if(raidLevelRef.current) {\r\n        raidLevelRef.current.selectedIndex = Array.from(raidLevelRef.current.options).findIndex((t) => +t.value === cardObj.raidLevel);\r\n      }\r\n    } else {\r\n      if(raidLevelRef.current) {\r\n        raidLevelRef.current.selectedIndex = 0;\r\n      }\r\n      setRaidLevel(1);\r\n    }\r\n    setImportingTrigger(!importingTrigger);\r\n  }\r\n\r\n  /**\r\n   * Callback for the function above\r\n   */\r\n  useEffect(() => {\r\n    importingCard.current = false;\r\n  }, [importingTrigger]);\r\n\r\n  useEffect(() => {\r\n    // Initially import the prop-card once the selectors have loaded\r\n    if(!initialImported.current && card && subtypeRef.current) {\r\n      importCard(card);\r\n      initialImported.current = true;\r\n    }\r\n  }, [card, importCard]);\r\n\r\n  const resetCropper = (newImage: string, imageSetter: () => void) => {\r\n    setCropImage(newImage);\r\n    setCurrentCropSetter(imageSetter);\r\n    setCropArea({ x: 0, y: 0});\r\n    setCroppedAreaPixels({ ...croppedAreaPixels, x: 0, y: 0});\r\n    setCropZoom(1);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.form}>\r\n        <div className={styles.seperator}>\r\n          <Button icon={faPaste} onClick={e => {\r\n            navigator.clipboard.readText()\r\n              .then((value: string) => {\r\n                importCard(JSON.parse(value) as ImportedCard);\r\n              })\r\n              .catch(console.error);\r\n          }}>\r\n            {'Import from clipboard'}\r\n          </Button>\r\n        </div>\r\n        <div className={styles.seperator}>\r\n          <Select name='Base Set' shortName='baseSet' selectRef={baseSetRef} onChange={e => setBaseSet(cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\r\n            {cardOptions.baseSets.map((value: BaseSet, i: number) =>\r\n              <option value={value.id} key={i}>{value.name}</option>\r\n            )}\r\n          </Select>\r\n          <Select name='Supertype' shortName='supertype' selectRef={supertypeRef} onChange={e => setSupertype(cardOptions.supertypes.find((a: Supertype) => a.id === +e.currentTarget.value))}>\r\n            {cardOptions.supertypes.map((value: Supertype, i: number) =>\r\n              <option value={value.id} key={i}>{value.name}</option>\r\n            )}\r\n          </Select>\r\n          <Select name='Type' shortName='type' selectRef={typeRef} onChange={e => setType(cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\r\n            {cardOptions.types.map((value: Type, i: number) => {\r\n              if(!value.supertypes.includes(supertype?.id || 0)) {\r\n                return false;\r\n              } else {\r\n                return <option value={value.id} key={i}>{value.name}</option>;\r\n              }\r\n            })}\r\n          </Select>\r\n          {type?.hasSubtypes &&\r\n            <Select name='Subtype' shortName='subtype' selectRef={subtypeRef} onChange={e => setSubtype(cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\r\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\r\n              {cardOptions.subtypes.map((value: Subtype, i: number) => {\r\n                if(!value.types.includes(type?.id || 0) || !value.supertypes.includes(supertype?.id || 0)) {\r\n                  return false;\r\n                } else {\r\n                  return <option value={value.id} key={i}>{value.name}</option>;\r\n                }\r\n              })}\r\n            </Select>\r\n          }\r\n          {subtype?.hasVariations &&\r\n            <Select name='Variation' shortName='variation' selectRef={variationRef} onChange={e => setVariation(cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\r\n              {cardOptions.variations.map((value: Variation, i: number) => {\r\n                if(!value.subtypes.includes(subtype?.id || 0)) {\r\n                  return false;\r\n                } else {\r\n                  return <option value={value.id} key={i}>{value.name}</option>;\r\n                }\r\n              })}\r\n            </Select>\r\n          }\r\n          {((supertype?.shortName === 'Pokemon' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) )|| (supertype?.shortName === 'Trainer' && type?.rarities[0])) &&\r\n            <Select name='Rarity' shortName='rarity' selectRef={rarityRef} onChange={e => setRarity(cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\r\n              <option value={'default'}>{'Default'}</option>\r\n              {cardOptions.rarities.map((value: Rarity, i: number) => {\r\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\r\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\r\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\r\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\r\n                  || (includesSubtype && (includesVariation || !variation))\r\n                  || includesVariation) {\r\n                  return <option value={value.id} key={i}>{value.name}</option>;\r\n                } else {\r\n                  return false;\r\n                }\r\n              })}\r\n            </Select>\r\n          }\r\n          {(!(supertype?.shortName === 'Energy' && type?.shortName !== 'Special') && supertype?.shortName !== 'RaidBoss') && <>\r\n            <Select name='Rotation' shortName='rotation' selectRef={rotationRef} onChange={e => setRotation(cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\r\n              {cardOptions.rotations.map((value: Rotation, i: number) =>\r\n                <option value={value.id} key={i}>{value.name}</option>\r\n              )}\r\n            </Select>\r\n            <Select name='Rarity Icon' shortName='rarityIcon' selectRef={rarityIconRef} onChange={e => setRarityIcon(cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\r\n              <option value={'none'}>{'None'}</option>\r\n              {cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\r\n                <option value={value.id} key={i}>{value.name}</option>\r\n              )}\r\n            </Select>\r\n            <Checkbox name='Custom Set Icon' shortName='customSetIcon' checked={hasCustomSetIcon} setter={setHasCustomSetIcon} />\r\n            {hasCustomSetIcon ?\r\n              <ImageInput shortName='customSetIcon' setter={setCustomSetIcon} />\r\n              :\r\n              <Select name='Set Icon' shortName='set' selectRef={setIconRef} onChange={e => setSet(cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\r\n                {cardOptions.sets.map((value: Set, i: number) =>\r\n                  <option value={value.id} key={i}>{value.name}</option>\r\n                )}\r\n              </Select>\r\n            }\r\n          </>}\r\n          {supertype?.shortName === 'RaidBoss' &&\r\n            <Select name='Raid Level' shortName='raidLevel' selectRef={raidLevelRef} onChange={e => setRaidLevel(+e.currentTarget.value)}>\r\n              <option value={1}>{1}</option>\r\n              <option value={2}>{2}</option>\r\n              <option value={3}>{3}</option>\r\n            </Select>\r\n          }\r\n        </div>\r\n        {!(supertype?.shortName === 'Energy' && type?.shortName !== 'Special') && <>\r\n          <div className={styles.seperator}>\r\n            <Input type='text' name='Name' shortName='name' value={name} setter={setName} />\r\n            {(supertype?.shortName === 'Pokemon' || supertype?.shortName === 'RaidBoss') &&\r\n              <Input type='number' name='Hitpoints' shortName='hitpoints' value={hitpoints} setter={setHitpoints} min={0} />\r\n            }\r\n            {supertype?.shortName !== 'RaidBoss' && <>\r\n              {subtype?.hasPrevolve && <>\r\n                <Input type='text' name='Prevolve Name' shortName='prevolveName' value={prevolveName} setter={setPrevolveName} />\r\n                <ImageInput name='Prevolve Image' shortName='prevolveImage' setter={setPrevolveImage} />\r\n              </>}\r\n              {subtype?.hasPokedexEntry &&\r\n                <Input type='text' horizontal name='Pokédex Entry' shortName='pokedexEntry' value={pokedexEntry} setter={setPokedexEntry} />\r\n              }\r\n              {type?.hasSubname &&\r\n                <Input type='text' name='Subname' shortName='subname' value={subname} setter={setSubname} />\r\n              }\r\n            </>}\r\n          </div>\r\n          {(supertype?.shortName === 'Pokemon' || supertype?.shortName === 'RaidBoss') && <>\r\n            {supertype.shortName !== 'RaidBoss' &&\r\n              <div className={styles.seperator}>\r\n                <Checkbox name='Has Ability' shortName='hasAbility' checked={hasAbility} setter={setHasAbility} />\r\n                {hasAbility && <>\r\n                  <Input type='text' name='Ability Name' shortName='abilityName' value={abilityName} setter={setAbilityName} />\r\n                  <Input type='textarea' name='Ability Text' shortName='abilityText' value={abilityText} setter={setAbilityText} />\r\n                </>}\r\n              </div>\r\n            }\r\n            <div className={styles.seperator}>\r\n              <Input type='text' name='Move Name' shortName='move1Name' value={move1Name} setter={setMove1Name} />\r\n              <Input type='text' name='Move Damage' shortName='move1Damage' value={move1Damage} setter={setMove1Damage} />\r\n              <Input type='textarea' horizontal name='Move Text' shortName='move1Text' value={move1Text} setter={setMove1Text} />\r\n              {supertype.shortName !== 'RaidBoss' &&\r\n                <EnergyPicker label={'Move Cost'} types={cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\r\n              }\r\n            </div>\r\n            {(!hasAbility || supertype.shortName === 'RaidBoss') &&\r\n              <div className={styles.seperator}>\r\n                {supertype.shortName !== 'RaidBoss' &&\r\n                  <Checkbox name='Has Second Move' shortName='hasSecondMove' checked={hasSecondMove} setter={setHasSecondMove} />\r\n                }\r\n                {(hasSecondMove || supertype.shortName === 'RaidBoss') && <>\r\n                  <Input type='text' name='Move Name' shortName='move2Name' value={move2Name} setter={setMove2Name} />\r\n                  <Input type='text' name='Move Damage' shortName='move2Damage' value={move2Damage} setter={setMove2Damage} />\r\n                  <Input type='textarea' name='Move Text' shortName='move2Text' value={move2Text} setter={setMove2Text} />\r\n                  {supertype.shortName !== 'RaidBoss' &&\r\n                    <EnergyPicker label={'Move Cost'} types={cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\r\n                }\r\n                </>}\r\n              </div>\r\n            }\r\n            {supertype.shortName === 'RaidBoss' &&\r\n              <div className={styles.seperator}>\r\n                <Input type='text' name='Move Name' shortName='move2Name' value={move3Name} setter={setMove3Name} />\r\n                <Input type='text' name='Move Damage' shortName='move2Damage' value={move3Damage} setter={setMove3Damage} />\r\n                <Input type='textarea' name='Move Text' shortName='move2Text' value={move3Text} setter={setMove3Text} />\r\n              </div>\r\n            }\r\n          </>}\r\n          {supertype?.shortName === 'Pokemon' && <>\r\n            <div className={styles.seperator}>\r\n              <Select name='Weakness Type' shortName='weaknessType' selectRef={weaknessTypeRef} onChange={e => setWeaknessType(cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\r\n                {cardOptions.types.map((value: Type, i: number) => {\r\n                  if(!value.isEnergy) {\r\n                    return false;\r\n                  } else {\r\n                    return <option value={value.id} key={i}>{value.name}</option>;\r\n                  }\r\n                })}\r\n              </Select>\r\n              <Input type='number' name='Weakness Amount' shortName='weaknessAmount' value={weaknessAmount} setter={setWeaknessAmount} max={999} min={0} />\r\n              <Select name='Resistance Type' shortName='resistanceType' selectRef={resistanceTypeRef} onChange={e => setResistanceType(cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\r\n                <option value={'none'}>{'None'}</option>\r\n                {cardOptions.types.map((value: Type, i: number) => {\r\n                  if(!value.isEnergy) {\r\n                    return false;\r\n                  } else {\r\n                    return <option value={value.id} key={i}>{value.name}</option>;\r\n                  }\r\n                })}\r\n              </Select>\r\n              {resistanceType &&\r\n                <Input type='number' name='Resistance Amount' shortName='resistanceAmount' value={resistanceAmount} setter={setResistanceAmount} max={999} min={0} />\r\n              }\r\n              <Input type='number' name='Retreat Cost' shortName='retreatCost' value={retreatCost} setter={(newValue: number) => setRetreatCost(Math.round(newValue))} max={5} min={0} />\r\n            </div>\r\n          </>}\r\n          {(!subtype?.noDescription && supertype?.shortName !== 'RaidBoss') &&\r\n            <div className={styles.seperator}>\r\n              <Input type='textarea' name='Description' shortName='description' value={description} setter={setDescription} />\r\n            </div>\r\n          }\r\n          <div className={styles.seperator}>\r\n            {supertype?.shortName !== 'Energy' && supertype?.shortName !== 'RaidBoss' &&\r\n              <Input type='text' name='Illustrator' shortName='illustrator' value={illustrator} setter={setIllustrator} />\r\n            }\r\n            <Input type='text' name='Card Number' shortName='cardNumber' value={cardNumber} setter={setCardNumber} />\r\n            {supertype?.shortName !== 'RaidBoss' &&\r\n              <Input type='text' name='Total In Set' shortName='totalInSet' value={totalInSet} setter={setTotalInSet} />\r\n            }\r\n          </div>\r\n        </>}\r\n        <div className={styles.seperator}>\r\n          <span className={styles.info}>{'Card dimensions are 747w × 1038h'}</span>\r\n          {currentCropSetter &&\r\n            <>\r\n              <div className={styles.cropperWrapper}>\r\n                <Cropper\r\n                  image={cropImage}\r\n                  crop={cropArea}\r\n                  zoom={cropZoom}\r\n                  cropSize={{ width: 320, height: 444.66 }} // Based on aspect ratio\r\n                  maxZoom={100}\r\n                  minZoom={.1}\r\n                  restrictPosition={false}\r\n                  zoomSpeed={.1}\r\n                  aspect={747 / 1038}\r\n                  onCropChange={(location: Point) => setCropArea(location)}\r\n                  onCropComplete={async (croppedArea: Area, cap: Area) => setCroppedAreaPixels(cap)}\r\n                  onZoomChange={(newZoom: number) => setCropZoom(newZoom)}\r\n                />\r\n                <img alt='' src={getCardImage({baseSet: baseSet?.shortName, type: type?.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype?.shortName, variation: variation?.shortName})} className={styles.cropperImage} />\r\n              </div>\r\n              <Button icon={faCheckSquare} className={styles.buttonCrop} onClick={async () => {\r\n                const croppedImage = await getCroppedImg(cropImage, croppedAreaPixels);\r\n                currentCropSetter && currentCropSetter(croppedImage);\r\n              }}>\r\n                {'Apply crop'}\r\n              </Button>\r\n            </>\r\n          }\r\n          <ImageInput name='Background Image' shortName='backgroundImage' info='Placed behind everything'\r\n            setter={setBackgroundImage}\r\n            croppable cropperSetter={resetCropper}\r\n          />\r\n          <ImageInput name='Card Image' shortName='imageLayer1' info='Placed in front of background'\r\n            setter={setImageLayer1}\r\n            croppable cropperSetter={resetCropper}\r\n          />\r\n          <ImageInput name='Top Image' shortName='imageLayer2' info='Placed on top of the card image'\r\n            setter={setImageLayer2}\r\n            croppable cropperSetter={resetCropper}\r\n          />\r\n          {supertype?.shortName === 'Energy' &&\r\n            <ImageInput name='Type Image' shortName='typeImage' info=\"The energy's top right icon\" setter={setTypeImage} />\r\n          }\r\n        </div>\r\n        <div className={styles.seperator}>\r\n          <Button icon={faFileDownload} className={styles.buttonDownload} onClick={downloadCard}>{'Download as image'}</Button>\r\n          <Button icon={faClipboard} onClick={exportCard}>{'Export to clipboard'}</Button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.cardWrapper}>\r\n        <CardDisplay card={makeCard()} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardCreatorPage;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'redux/store';\r\nimport CardCreatorPage from 'pages/CardCreator';\r\nimport styles from './App.module.scss';\r\nimport { Switch, BrowserRouter as Router, Route, } from 'react-router-dom';\r\nimport garbodor from './garbodor.json';\r\nimport pikachu from './pikachu.json';\r\nimport { ImportedCard } from 'interfaces';\r\nimport { relativePathPrefix } from 'utils/relativePathPrefix';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className={styles.wrapper}>\r\n        <header className={styles.header}>\r\n          <div className={styles.headerCircle} />\r\n        </header>\r\n        <div className={styles.content}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/pokemon'>\r\n                <CardCreatorPage card={garbodor as ImportedCard} />\r\n              </Route>\r\n              <Route exact path='/raid-boss'>\r\n                <CardCreatorPage card={pikachu as ImportedCard} />\r\n              </Route>\r\n              <Route path=''>\r\n                <CardCreatorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n        <div className={styles.background} style={{ background: `url(${relativePathPrefix('/img/line-pattern.svg')})` }} />\r\n        <footer className={styles.footer} />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"29.5%\",\"ptcgText\":\"CardDisplay_ptcgText__QQ7Xc\",\"italicText\":\"CardDisplay_italicText__2o487\",\"card\":\"CardDisplay_card__isaOg\",\"whiteText\":\"CardDisplay_whiteText__2pvQy\",\"name\":\"CardDisplay_name__1V1kS\",\"namePokemon\":\"CardDisplay_namePokemon__1pzgz\",\"nameRaidBoss\":\"CardDisplay_nameRaidBoss__12l3h\",\"nameIcon\":\"CardDisplay_nameIcon__2xvS8\",\"nameOutline\":\"CardDisplay_nameOutline__1LUMF\",\"nameIconStar\":\"CardDisplay_nameIconStar__3qs_2\",\"hitpoints\":\"CardDisplay_hitpoints__3nzXl\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2lI5p\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__LInzl\",\"hitpointsWrapperBlackOutline\":\"CardDisplay_hitpointsWrapperBlackOutline__32Vp3\",\"hitpointsWrapperRaidBoss\":\"CardDisplay_hitpointsWrapperRaidBoss__2PKNX\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__2j8Tj\",\"prevolveName\":\"CardDisplay_prevolveName__8ZdnF\",\"subname\":\"CardDisplay_subname__1V1AH\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__1yK_U\",\"movesWrapper\":\"CardDisplay_movesWrapper__1C3yQ\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__3qPP4\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__f9Sh8\",\"abilityIcon\":\"CardDisplay_abilityIcon__1Q8VX\",\"abilityIconV\":\"CardDisplay_abilityIconV__137Aq\",\"abilityText\":\"CardDisplay_abilityText__2j1TT\",\"move\":\"CardDisplay_move__WKXjI\",\"moveMultiple\":\"CardDisplay_moveMultiple__1JmGh\",\"moveV\":\"CardDisplay_moveV__XkELM\",\"moveName\":\"CardDisplay_moveName__Kt0y4\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__3X_3R\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2W1ZH\",\"moveCost\":\"CardDisplay_moveCost__gdTKO\",\"moveEnergy\":\"CardDisplay_moveEnergy__23uIB\",\"moveDamage\":\"CardDisplay_moveDamage__2iLk9\",\"moveText\":\"CardDisplay_moveText__1bbM1\",\"moveTextV\":\"CardDisplay_moveTextV__2PEUu\",\"typeBar\":\"CardDisplay_typeBar__2vmGi\",\"weakness\":\"CardDisplay_weakness__1ATOR\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__5pz9x\",\"resistance\":\"CardDisplay_resistance__1w_BD\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__1TBxe\",\"retreatCost\":\"CardDisplay_retreatCost__3_z5H\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__3I3kn\",\"illustrator\":\"CardDisplay_illustrator__1SKuG\",\"setIcon\":\"CardDisplay_setIcon__1rqlA\",\"setNumber\":\"CardDisplay_setNumber__2O4FK\",\"rotation\":\"CardDisplay_rotation__1RbOP\",\"rarityIcon\":\"CardDisplay_rarityIcon__2iqGF\",\"cardInfoWhite\":\"CardDisplay_cardInfoWhite__33DcQ\",\"description\":\"CardDisplay_description__BIr5j\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__3p9vS\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__1DSYk\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__1WRSF\",\"descriptionWrapperPokemonOutline\":\"CardDisplay_descriptionWrapperPokemonOutline__7YWtg\",\"descriptionWrapperTrainerOutline\":\"CardDisplay_descriptionWrapperTrainerOutline__KktT4\",\"prevolveImage\":\"CardDisplay_prevolveImage__1wD8H\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__3HShx\",\"image\":\"CardDisplay_image__2ZGOH\",\"backgroundImage\":\"CardDisplay_backgroundImage__12fr_\",\"imageLayer1\":\"CardDisplay_imageLayer1__PFYfu\",\"imageLayer2\":\"CardDisplay_imageLayer2__1PAIT\",\"typeImage\":\"CardDisplay_typeImage__3nS1a\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__g_LJH\",\"background\":\"CardDisplay_background__3DagX\",\"raidBossType\":\"CardDisplay_raidBossType__hdVwV\",\"raidBossNumber\":\"CardDisplay_raidBossNumber__1Pzn0\",\"raidBossMovesWrapper\":\"CardDisplay_raidBossMovesWrapper__2AHkm\",\"raidBossMove\":\"CardDisplay_raidBossMove__1-nE0\",\"raidBossMoveName\":\"CardDisplay_raidBossMoveName__11O5H\",\"raidBossMoveText\":\"CardDisplay_raidBossMoveText__2vBiq\",\"raidBossMoveDamage\":\"CardDisplay_raidBossMoveDamage__2UeXY\",\"raidBossMoveDamageShoved\":\"CardDisplay_raidBossMoveDamageShoved__1l0r1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1sljn\",\"header\":\"App_header__27VeY\",\"headerCircle\":\"App_headerCircle__3zq95\",\"content\":\"App_content__NG0Uw\",\"footer\":\"App_footer__2FS82\",\"background\":\"App_background__327Ii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__1y9P2\",\"type\":\"EnergyPicker_type__2hQ27\",\"image\":\"EnergyPicker_image__2cGKN\",\"button\":\"EnergyPicker_button__2EHtl\"};"],"sourceRoot":""}